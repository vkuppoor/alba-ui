{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AlbaButtonService",
            "id": "injectable-AlbaButtonService-7d2bc145e607704cb44d148b85995e6a5ae3e6a6c1e23bf0a6aad383bb4827b9f0874694154a7adf7767cb227ce649292916ac4f9ceed66f2454d66e2910cd75",
            "file": "projects/alba-ui/src/lib/components/button/alba-button.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlbaButtonService {\n\n  constructor() { }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AlbaButtonComponent",
            "id": "component-AlbaButtonComponent-a5b5f5a57b357794e5e7958239dfb3e4311d2956aa4d28c81857b8469cc07d3a233b5d1d82d5ab12029d9a3c8ab4816eac5623592a15a1012d1411a352c68399",
            "file": "projects/alba-ui/src/lib/components/button/alba-button.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "alba-button",
            "styleUrls": [
                "./alba-button.component.scss"
            ],
            "styles": [],
            "template": "<ng-container *ngIf=\"href === undefined\">\n  <button\n    class=\"\n      btn\n      btn{{ outlineClass }}{{ variantClass }}\n      btn{{ sizeClass }}\n      {{ disabledClass }}\n      {{ blockClass }}\n    \"\n  >\n    <ng-container [ngTemplateOutlet]=\"buttonContent\"></ng-container>\n  </button>\n</ng-container>\n<ng-container *ngIf=\"href !== undefined\">\n<a\n  [href]=\"href\"\n  class=\"\n    btn\n    btn{{ outlineClass }}{{ variantClass }}\n    btn{{ sizeClass }}\n    {{ disabledClass }}\n    {{ linkClass }}\n    {{ blockClass }}\n  \"\n>\n  <ng-container [ngTemplateOutlet]=\"buttonContent\"></ng-container>\n</a>\n</ng-container>\n<ng-template #buttonContent>\n  <ng-content></ng-content>\n</ng-template>\n\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "block",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "boolean | undefined",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "boolean | undefined",
                    "decorators": []
                },
                {
                    "name": "href",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "outline",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "boolean | undefined",
                    "decorators": []
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "AlbaButtonSize",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "AlbaButtonType",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "AlbaButtonVariant",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "blockClass",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 73
                },
                {
                    "name": "disabledClass",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "linkClass",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "outlineClass",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "sizeClass",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "variantClass",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\n\nexport const AlbaButtonTypes = [\n  'primary',\n  'secondary',\n  'success',\n  'info',\n  'warning',\n  'danger',\n  'light',\n  'dark'\n\n] as const;\nexport type AlbaButtonVariant = typeof AlbaButtonTypes[number];\nexport type AlbaButtonSize = 'small' | 'large' | undefined;\nexport type AlbaButtonType = 'button' | 'reset' | 'submit';\n\n@Component({\n  selector: 'alba-button',\n  template: `\n    <ng-container *ngIf=\"href === undefined\">\n      <button\n        class=\"\n          btn \n          btn{{ outlineClass }}{{ variantClass }} \n          btn{{ sizeClass }} \n          {{ disabledClass }} \n          {{ blockClass }}\n        \"\n      >\n        <ng-container [ngTemplateOutlet]=\"buttonContent\"></ng-container>\n      </button>\n    </ng-container>\n    <ng-container *ngIf=\"href !== undefined\">\n    <a\n      [href]=\"href\" \n      class=\"\n        btn \n        btn{{ outlineClass }}{{ variantClass }} \n        btn{{ sizeClass }} \n        {{ disabledClass }} \n        {{ linkClass }} \n        {{ blockClass }}\n      \"\n    >\n      <ng-container [ngTemplateOutlet]=\"buttonContent\"></ng-container>\n    </a>\n    </ng-container>\n    <ng-template #buttonContent>\n      <ng-content></ng-content>\n    </ng-template>\n    \n  `,\n  styleUrls: ['./alba-button.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AlbaButtonComponent {\n\n  @Input() variant: AlbaButtonVariant = 'primary';\n  @Input() size: AlbaButtonSize;\n  @Input() type: AlbaButtonType = 'button';\n  @Input() disabled: boolean | undefined;\n  @Input() outline: boolean | undefined;\n  @Input() href: string | undefined;\n  @Input() block: boolean | undefined;\n  @Input() loading = false;\n\n  disabledClass: string = \"\";\n  variantClass: string = \"\";\n  outlineClass: string = \"\";\n  sizeClass: string = \"\";\n  linkClass: string = \"\";\n  blockClass: string = \"\";\n\n  ngOnInit() {\n\n    if ( this.disabled !== undefined || this.disabled === true) {\n      this.disabledClass = 'disabled';\n    }\n\n    if ( this.outline !== undefined || this.outline === true) {\n      this.outlineClass = '-outline';\n    }\n\n    if ( this.block !== undefined || this.block === true) {\n      this.blockClass = 'btn-block';\n    }\n\n    if ( this.size == 'small' ) {\n      this.sizeClass = '-sm';\n    } else if ( this.size == 'large' ) {\n      this.sizeClass = '-lg';\n    }\n\n    if (this.href !== undefined) {\n      this.linkClass = \"btn-link\"\n    }\n\n    this.variantClass = \"-\" + this.variant;\n    \n\n  }\n\n }\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../styles.scss';\n\n.btn {\n  display: inline-block;\n  font-weight: normal;\n  text-align: center;\n  white-space: nowrap;\n  vertical-align: middle;\n  user-select: none;\n  border: 1px solid transparent;\n  padding: 0.75rem 0.75rem;\n  font-size: 0.875rem;\n  line-height: 1.25;\n  transition: all 0.15s ease-in-out;\n  border-radius: 0.25rem;\n}\n\n.disabled {\n  pointer-events: none;\n}\n\n.btn:focus .btn:hover {\n  text-decoration: none;\n}\n\n.btn:focus,\n.btn.focus {\n  outline: 0;\n  box-shadow: 0 0 0 3px rgba(32, 168, 216, 0.25);\n}\n\n.btn.disabled,\n.btn:disabled {\n  opacity: 0.65;\n}\n\n.btn:active,\n.btn.active {\n  background-image: none;\n}\n\na.btn.disabled,\nfieldset[disabled] a.btn {\n  pointer-events: none;\n}\n\n.btn-primary {\n  color: $alba-primary-text;\n  background-color: $alba-primary-bg;\n  border-color: $alba-primary-bg;\n}\n\n.btn-primary:hover {\n  color: $alba-primary-text;\n  background-color: $alba-primary-hover-bg;\n  border-color: $alba-primary-hover-border;\n}\n\n.btn-primary:focus,\n.btn-primary.focus {\n  box-shadow: 0 0 0 3px $alba-primary-hover-shadow;\n}\n\n.btn-primary.disabled .btn-primary:disabled {\n  background-color: $alba-primary-disabled-bg;\n  border-color: $alba-primary-disabled-border;\n}\n\n.btn-primary:active,\n.btn-primary.active,\n.show > .btn-primary.dropdown-toggle {\n  background-color: #1b8eb7;\n  background-image: none;\n  border-color: #1985ac;\n}\n\n.btn-secondary {\n  color: #111;\n  background-color: #a4b7c1;\n  border-color: #a4b7c1;\n}\n\n.btn-secondary:hover {\n  color: #111;\n  background-color: #8da5b2;\n  border-color: #869fac;\n}\n\n.btn-secondary:focus,\n.btn-secondary.focus {\n  box-shadow: 0 0 0 3px rgba(164, 183, 193, 0.5);\n}\n\n.btn-secondary.disabled,\n.btn-secondary:disabled {\n  background-color: #a4b7c1;\n  border-color: #a4b7c1;\n}\n\n.btn-secondary:active\n  .btn-secondary.active\n  .show\n  > .btn-secondary.dropdown-toggle {\n  background-color: #8da5b2;\n  background-image: none;\n  border-color: #869fac;\n}\n\n.btn-success {\n  color: #ffffff;\n  background-color: #53a451;\n  border-color: #53a451;\n}\n\n.btn-success:hover {\n  color: #ffffff;\n  background-color: #67ad38;\n  border-color: #61a434;\n}\n\n.btn-success:focus,\n.btn-success.focus {\n  box-shadow: 0 0 0 3px rgba(121, 196, 71, 0.5);\n}\n\n.btn-success.disabled,\n.btn-success:disabled {\n  background-color: #86c38b;\n  border-color: #79c447;\n}\n\n.btn-success:active,\n.btn-success.active,\n.show > .btn-success.dropdown-toggle {\n  background-color: #67ad38;\n  background-image: none;\n  border-color: #61a434;\n}\n\n.btn-info {\n  color: #ffffff;\n  background-color: #5087a0;\n  border-color: #5087a0;\n}\n\n.btn-info:hover {\n  color: #111;\n  background-color: #44b4eb;\n  border-color: #39afea;\n}\n\n.btn-info:focus,\n.btn-info.focus {\n  box-shadow: 0 0 0 3px rgba(103, 194, 239, 0.5);\n}\n\n.btn-info.disabled,\n.btn-info:disabled {\n  background-color: #67c2ef;\n  border-color: #67c2ef;\n}\n\n.btn-info:active,\n.btn-info.active,\n.show > .btn-info.dropdown-toggle {\n  background-color: #44b4eb;\n  background-image: none;\n  border-color: #39afea;\n}\n\n.btn-warning {\n  color: #ffffff;\n  background-color: #ce713c;\n  border-color: #ce713c;\n}\n\n.btn-warning:hover {\n  color: #111;\n  background-color: #f9ae18;\n  border-color: #f9aa0b;\n}\n\n.btn-warning:focus,\n.btn-warning.focus {\n  box-shadow: 0 0 0 3px rgba(250, 187, 61, 0.5);\n}\n\n.btn-warning.disabled,\n.btn-warning:disabled {\n  background-color: #fabb3d;\n  border-color: #fabb3d;\n}\n\n.btn-warning:active,\n.btn-warning.active,\n.show > .btn-warning.dropdown-toggle {\n  background-color: #f9ae18;\n  background-image: none;\n  border-color: #f9aa0b;\n}\n\n.btn-danger {\n  color: #fff;\n  background-color: #cb444a;\n  border-color: #cb444a;\n}\n\n.btn-danger:hover {\n  color: #fff;\n  background-color: #ff2e2e;\n  border-color: #ff2121;\n}\n\n.btn-danger:focus,\n.btn-danger.focus {\n  box-shadow: 0 0 0 3px rgba(255, 84, 84, 0.5);\n}\n\n.btn-danger.disabled,\n.btn-danger:disabled {\n  background-color: #ff5454;\n  border-color: #ff5454;\n}\n\n.btn-danger:active,\n.btn-danger.active,\n.show > .btn-danger.dropdown-toggle {\n  background-color: #ff2e2e;\n  background-image: none;\n  border-color: #ff2121;\n}\n\n.btn-light {\n  color: #313335;\n  background-color: #d9e1e6;\n  border-color: #d9e1e6;\n}\n\n.btn-light:hover {\n  color: #666666;\n  background-color: #f0f3f5;\n  border-color: #d9e1e6;\n}\n\n.btn-light:focus,\n.btn-light.focus {\n  box-shadow: 0 0 0 3px rgba(240, 243, 245, 0.5);\n}\n\n.btn-light.disabled,\n.btn-light:disabled {\n  background-color: #f0f3f5;\n  border-color: #f0f3f5;\n}\n\n.btn-light:active,\n.btn-light.active,\n.show > .btn-light.dropdown-toggle {\n  background-color: #d9e1e6;\n  background-image: none;\n  border-color: #d1dbe1;\n}\n\n.btn-dark {\n  color: #fff;\n  background-color: #29363d;\n  border-color: #29363d;\n}\n\n.btn-dark:hover {\n  color: #fff;\n  background-color: #1a2226;\n  border-color: #151b1f;\n}\n\n.btn-dark:focus,\n.btn-dark.focus {\n  box-shadow: 0 0 0 3px rgba(41, 54, 61, 0.5);\n}\n\n.btn-dark.disabled,\n.btn-dark:disabled {\n  background-color: #29363d;\n  border-color: #29363d;\n}\n\n.btn-dark:active,\n.btn-dark.active,\n.show > .btn-dark.dropdown-toggle {\n  background-color: #1a2226;\n  background-image: none;\n  border-color: #151b1f;\n}\n\n.btn-outline-primary {\n  color: #20a8d8;\n  background-color: transparent;\n  background-image: none;\n  border-color: #20a8d8;\n}\n\n.btn-outline-primary:hover {\n  color: #fff;\n  background-color: #20a8d8;\n  border-color: #20a8d8;\n}\n\n.btn-outline-primary:focus,\n.btn-outline-primary.focus {\n  box-shadow: 0 0 0 3px rgba(32, 168, 216, 0.5);\n}\n\n.btn-outline-primary.disabled,\n.btn-outline-primary:disabled {\n  color: #20a8d8;\n  background-color: transparent;\n}\n\n.btn-outline-primary:active,\n.btn-outline-primary.active,\n.show > .btn-outline-primary.dropdown-toggle {\n  color: #fff;\n  background-color: #20a8d8;\n  border-color: #20a8d8;\n}\n\n.btn-outline-secondary {\n  color: #a4b7c1;\n  background-color: transparent;\n  background-image: none;\n  border-color: #a4b7c1;\n}\n\n.btn-outline-secondary:hover {\n  color: #fff;\n  background-color: #a4b7c1;\n  border-color: #a4b7c1;\n}\n\n.btn-outline-secondary:focus,\n.btn-outline-secondary.focus {\n  box-shadow: 0 0 0 3px rgba(164, 183, 193, 0.5);\n}\n\n.btn-outline-secondary.disabled,\n.btn-outline-secondary:disabled {\n  color: #a4b7c1;\n  background-color: transparent;\n}\n\n.btn-outline-secondary:active,\n.btn-outline-secondary.active,\n.show > .btn-outline-secondary.dropdown-toggle {\n  color: #fff;\n  background-color: #a4b7c1;\n  border-color: #a4b7c1;\n}\n\n.btn-outline-success {\n  color: #79c447;\n  background-color: transparent;\n  background-image: none;\n  border-color: #79c447;\n}\n\n.btn-outline-success:hover {\n  color: #fff;\n  background-color: #79c447;\n  border-color: #79c447;\n}\n\n.btn-outline-success:focus,\n.btn-outline-success.focus {\n  box-shadow: 0 0 0 3px rgba(121, 196, 71, 0.5);\n}\n\n.btn-outline-success.disabled,\n.btn-outline-success:disabled {\n  color: #79c447;\n  background-color: transparent;\n}\n\n.btn-outline-success:active,\n.btn-outline-success.active,\n.show > .btn-outline-success.dropdown-toggle {\n  color: #fff;\n  background-color: #79c447;\n  border-color: #79c447;\n}\n\n.btn-outline-info {\n  color: #67c2ef;\n  background-color: transparent;\n  background-image: none;\n  border-color: #67c2ef;\n}\n\n.btn-outline-info:hover {\n  color: #fff;\n  background-color: #67c2ef;\n  border-color: #67c2ef;\n}\n\n.btn-outline-info:focus,\n.btn-outline-info.focus {\n  box-shadow: 0 0 0 3px rgba(103, 194, 239, 0.5);\n}\n\n.btn-outline-info.disabled,\n.btn-outline-info:disabled {\n  color: #67c2ef;\n  background-color: transparent;\n}\n\n.btn-outline-info:active,\n.btn-outline-info.active,\n.show > .btn-outline-info.dropdown-toggle {\n  color: #fff;\n  background-color: #67c2ef;\n  border-color: #67c2ef;\n}\n\n.btn-outline-warning {\n  color: #fabb3d;\n  background-color: transparent;\n  background-image: none;\n  border-color: #fabb3d;\n}\n\n.btn-outline-warning:hover {\n  color: #fff;\n  background-color: #fabb3d;\n  border-color: #fabb3d;\n}\n\n.btn-outline-warning:focus,\n.btn-outline-warning.focus {\n  box-shadow: 0 0 0 3px rgba(250, 187, 61, 0.5);\n}\n\n.btn-outline-warning.disabled,\n.btn-outline-warning:disabled {\n  color: #fabb3d;\n  background-color: transparent;\n}\n\n.btn-outline-warning:active,\n.btn-outline-warning.active,\n.show > .btn-outline-warning.dropdown-toggle {\n  color: #fff;\n  background-color: #fabb3d;\n  border-color: #fabb3d;\n}\n\n.btn-outline-danger {\n  color: #ff5454;\n  background-color: transparent;\n  background-image: none;\n  border-color: #ff5454;\n}\n\n.btn-outline-danger:hover {\n  color: #fff;\n  background-color: #ff5454;\n  border-color: #ff5454;\n}\n\n.btn-outline-danger:focus,\n.btn-outline-danger.focus {\n  box-shadow: 0 0 0 3px rgba(255, 84, 84, 0.5);\n}\n\n.btn-outline-danger.disabled,\n.btn-outline-danger:disabled {\n  color: #ff5454;\n  background-color: transparent;\n}\n\n.btn-outline-danger:active,\n.btn-outline-danger.active,\n.show > .btn-outline-danger.dropdown-toggle {\n  color: #fff;\n  background-color: #ff5454;\n  border-color: #ff5454;\n}\n\n.btn-outline-light {\n  color: #f0f3f5;\n  background-color: transparent;\n  background-image: none;\n  border-color: #f0f3f5;\n}\n\n.btn-outline-light:hover {\n  color: #fff;\n  background-color: #f0f3f5;\n  border-color: #f0f3f5;\n}\n\n.btn-outline-light:focus,\n.btn-outline-light.focus {\n  box-shadow: 0 0 0 3px rgba(240, 243, 245, 0.5);\n}\n\n.btn-outline-light.disabled,\n.btn-outline-light:disabled {\n  color: #f0f3f5;\n  background-color: transparent;\n}\n\n.btn-outline-light:active,\n.btn-outline-light.active,\n.show > .btn-outline-light.dropdown-toggle {\n  color: #fff;\n  background-color: #f0f3f5;\n  border-color: #f0f3f5;\n}\n\n.btn-outline-dark {\n  color: #29363d;\n  background-color: transparent;\n  background-image: none;\n  border-color: #29363d;\n}\n\n.btn-outline-dark:hover {\n  color: #fff;\n  background-color: #29363d;\n  border-color: #29363d;\n}\n\n.btn-outline-dark:focus,\n.btn-outline-dark.focus {\n  box-shadow: 0 0 0 3px rgba(41, 54, 61, 0.5);\n}\n\n.btn-outline-dark.disabled,\n.btn-outline-dark:disabled {\n  color: #29363d;\n  background-color: transparent;\n}\n\n.btn-outline-dark:active,\n.btn-outline-dark.active,\n.show > .btn-outline-dark.dropdown-toggle {\n  color: #fff;\n  background-color: #29363d;\n  border-color: #29363d;\n}\n\n.btn-link {\n  font-weight: normal;\n  color: #20a8d8;\n  border-radius: 0;\n}\n\n.btn-link,\n.btn-link:active,\n.btn-link.active,\n.btn-link:disabled {\n  background-color: transparent;\n}\n\n.btn-link,\n.btn-link:focus,\n.btn-link:active {\n  border-color: transparent;\n  box-shadow: none;\n}\n\n.btn-link:hover {\n  border-color: transparent;\n}\n\n.btn-link:focus,\n.btn-link:hover {\n  color: #167495;\n  text-decoration: underline;\n  background-color: transparent;\n}\n\n.btn-link:disabled {\n  color: #536c79;\n}\n\n.btn-link:disabled:focus,\n.btn-link:disabled:hover {\n  text-decoration: none;\n}\n\n.btn-lg,\n.btn-group-lg > .btn {\n  padding: 0.5rem 1rem;\n  font-size: 1.25rem;\n  line-height: 1.5;\n}\n\n.btn-sm,\n.btn-group-sm > .btn {\n  padding: 0.4rem 0.75rem;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  display: inline-block;\n  font-weight: normal;\n  text-align: center;\n  white-space: nowrap;\n  vertical-align: middle;\n  user-select: none;\n  border: 1px solid transparent;\n  transition: all 0.15s ease-in-out;\n}\n\n.btn-block {\n  display: block;\n  width: 100%;\n}\n\n.btn-block + .btn-block {\n  margin-top: 0.5rem;\n}\n\ninput[type=\"submit\"].btn-block,\ninput[type=\"reset\"].btn-block,\ninput[type=\"button\"].btn-block {\n  width: 100%;\n}\n",
                    "styleUrl": "./alba-button.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-4ef205c97a334c309aa4001c8ab4a6d9571dcae18d0e85aaf0d367467ab5d3a9f13ab3573726f1fcb409bc9b49894dadfb80b1bbe1b6ba7041455ad9d4922004",
            "file": "stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-a557eec14f72c438a8033301f4d6ce023e0a1844a3b06ec2b38794a612acc31735ae78a5ee10071b230c8c20d699eb914554e69d07ade54adb371da8efb464cc",
            "file": "stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-7126d8c2607c946741c651482413b43feb72b2d63cac9d3ac173fde206a5e635eb4cdbf7ca7ac9327c7d4d05cf7ef619144c34c11609ad677081d0ee4e855064",
            "file": "stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        }
    ],
    "modules": [
        {
            "name": "AlbaButtonModule",
            "id": "module-AlbaButtonModule-e50b833ce67f3589fdc8dda030a9e7127884ddaa09720b740e2a5fe8b2a0290264d0d01c0f3b4ccd2b96f350a9ad6c40dfe402ff46f8fca6b660300d0015aead",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/alba-ui/src/lib/components/button/alba-button.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { AlbaButtonComponent } from './alba-button.component';\nimport {MatButtonModule} from '@angular/material/button';\n\n\n\n@NgModule({\n  declarations: [\n    AlbaButtonComponent\n  ],\n  imports: [\n    CommonModule,\n    MatButtonModule\n  ],\n  exports: [\n    AlbaButtonComponent\n  ]\n})\nexport class AlbaButtonModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AlbaButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AlbaButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "AlbaButtonTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/alba-ui/src/lib/components/button/alba-button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "[\n  'primary',\n  'secondary',\n  'success',\n  'info',\n  'warning',\n  'danger',\n  'light',\n  'dark'\n\n] as const"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "testClick",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/alba-ui/src/lib/components/button/alba-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(): void => {\n  console.log(\"test click\");\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "AlbaButtonSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"large\" | undefined",
                "file": "projects/alba-ui/src/lib/components/button/alba-button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "AlbaButtonType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"button\" | \"reset\" | \"submit\"",
                "file": "projects/alba-ui/src/lib/components/button/alba-button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "AlbaButtonVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/alba-ui/src/lib/components/button/alba-button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/alba-ui/src/lib/components/button/alba-button.component.ts": [
                {
                    "name": "AlbaButtonTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/alba-ui/src/lib/components/button/alba-button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "[\n  'primary',\n  'secondary',\n  'success',\n  'info',\n  'warning',\n  'danger',\n  'light',\n  'dark'\n\n] as const"
                }
            ],
            "stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ],
            "projects/alba-ui/src/lib/components/button/alba-button.stories.ts": [
                {
                    "name": "testClick",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/alba-ui/src/lib/components/button/alba-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(): void => {\n  console.log(\"test click\");\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/alba-ui/src/lib/components/button/alba-button.component.ts": [
                {
                    "name": "AlbaButtonSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"large\" | undefined",
                    "file": "projects/alba-ui/src/lib/components/button/alba-button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "AlbaButtonType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"button\" | \"reset\" | \"submit\"",
                    "file": "projects/alba-ui/src/lib/components/button/alba-button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "AlbaButtonVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/alba-ui/src/lib/components/button/alba-button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 5,
        "status": "low",
        "files": [
            {
                "filePath": "projects/alba-ui/src/lib/components/button/alba-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AlbaButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "projects/alba-ui/src/lib/components/button/alba-button.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AlbaButtonTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/alba-ui/src/lib/components/button/alba-button.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AlbaButtonService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/alba-ui/src/lib/components/button/alba-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "testClick",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            }
        ]
    }
}